name: 'Get Latest Semver Tag'
description: 'Get the latest semantic version tag from the current GitHub repository'
author: 'Half-Ogre Games'

inputs:
  prefix:
    description: 'Tag prefix to filter by (e.g., "v" for "v1.0.0")'
    required: false
    default: 'v'
  default-version:
    description: 'Default version to return if no tags are found'
    required: false
    default: 'v0.0.0'

outputs:
  tag:
    description: 'The latest semver tag (e.g., "v1.2.3-alpha.1+build.456")'
    value: ${{ steps.get-latest-semver-tag.outputs.tag }}
  version:
    description: 'The version without prefix (e.g., "1.2.3-alpha.1+build.456")'
    value: ${{ steps.get-latest-semver-tag.outputs.version }}
  major:
    description: 'The major version number'
    value: ${{ steps.get-latest-semver-tag.outputs.major }}
  minor:
    description: 'The minor version number'
    value: ${{ steps.get-latest-semver-tag.outputs.minor }}
  patch:
    description: 'The patch version number'
    value: ${{ steps.get-latest-semver-tag.outputs.patch }}
  prerelease:
    description: 'The pre-release version (e.g., "alpha.1")'
    value: ${{ steps.get-latest-semver-tag.outputs.prerelease }}
  build:
    description: 'The build metadata (e.g., "build.456")'
    value: ${{ steps.get-latest-semver-tag.outputs.build }}
  found:
    description: 'Whether a tag was found (true/false)'
    value: ${{ steps.get-latest-semver-tag.outputs.found }}

runs:
  using: 'composite'
  steps:
    - name: Build and run get-latest-semver-tag
      id: get-latest-semver-tag
      shell: bash
      env:
        INPUT_PREFIX: ${{ inputs.prefix }}
        INPUT_DEFAULT_VERSION: ${{ inputs.default-version }}
      run: |
        cd ${{ github.action_path }}
        go build -o get-latest-semver-tag main.go
        ./get-latest-semver-tag

branding:
  icon: 'tag'
  color: 'blue'